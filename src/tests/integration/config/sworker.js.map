{
  "version": 3,
  "sources": ["../../../utils.js", "../../../createDisposableWorker.js", "../../../run.js", "../../../post.js", "../../../postAll.js", "../../../register.js", "../../../unregister.js", "../../../create.js", "../../../index.js"],
  "sourcesContent": ["// Argument validation\nconst isValidObjectWith = fields => obj =>\n  !!obj && !Array.isArray(obj) && fields.every(field => Object.getOwnPropertyNames(obj).includes(field))\n\nconst isValidAction = obj => {\n  return isValidObjectWith(['message', 'func'])(obj) &&\n    typeof obj.func === 'function' && typeof obj.message === 'string'\n}\n\nconst isValidActionsArray = arr => arr.every(isValidAction)\n\nconst isValidPostParams = obj => {\n  return isValidObjectWith(['message', 'args'])(obj) &&\n    Array.isArray(obj.args) && typeof obj.message === 'string'\n}\n\nconst isValidPostParamsArray = arr => arr.every(isValidPostParams)\n\nconst isValidObjectsArray = arr => (fields = []) =>\n  arr.every(isValidObjectWith(fields))\n\nconst testArray = {\n  actionsArray: arr => isValidActionsArray(arr),\n  arraysArray: arr => arr.every(item => Array.isArray(item)),\n  objectsArray: arr => isValidObjectsArray(arr)(),\n  postParamsArray: arr => isValidPostParamsArray(arr),\n  stringsArray: arr => arr.every(item => typeof item === 'string')\n}\n\nconst isValidArg = arg => type => {\n  if (type === 'null') return arg === null\n  if (type === 'undefined') return arg === undefined\n  if (type === 'action') return isValidAction(arg)\n  if (Array.isArray(arg)) {\n    if (type !== 'array' && !testArray[type]) return false\n    if (type === 'array') return true\n    return testArray[type](arg)\n  }\n  if (arg) return typeof arg === type.toString(); // eslint-disable-line\n  return false\n}\n\nconst isValid = argument => (types = null) => {\n  if (Array.isArray(types)) return types.some(type => isValidArg(argument)(type))\n  if (isValidArg(argument)(types)) return true\n  return false\n}\n\n// Argument error builder\nconst argumentError = ({ expected = '', received, extraInfo = '' }) => {\n  try {\n    return new TypeError(`${'You should provide ' + expected}${'\\n' + extraInfo}${'\\nReceived: ' + JSON.stringify(received)}`)\n  } catch (err) {\n    if (err.message.includes('Converting circular structure to JSON')) {\n      return new TypeError(`${'You should provide ' + expected}${'\\n' + extraInfo}${'\\nReceived a circular structure: ' + received}`)\n    }\n    throw err\n  }\n}\n\n// Response builder\nconst makeResponse = work => `\n  self.onmessage = function(event) {\n    const args = event.data.message.args\n    if (args) {\n      self.postMessage((${work}).apply(null, args))\n      return close()\n    }\n    self.postMessage((${work})())\n    return close()\n  }\n`\n\nexport {\n  makeResponse,\n  argumentError,\n  isValid\n}\n", "export const createDisposableWorker = response => {\n  const URL = window.URL || window.webkitURL\n  const blob = new Blob([response], { type: 'application/javascript' }) // eslint-disable-line\n  const objectURL = URL.createObjectURL(blob)\n  const worker = new Worker(objectURL) // eslint-disable-line\n  worker.post = message =>\n    new Promise((resolve, reject) => {\n      worker.onmessage = event => {\n        URL.revokeObjectURL(objectURL)\n        resolve(event.data)\n      }\n      worker.onerror = e => {\n        console.error(`Error: Line ${e.lineno} in ${e.filename}: ${e.message}`)\n        reject(e)\n      }\n      worker.postMessage({ message })\n    })\n  return worker\n}\n", "import { argumentError, isValid, makeResponse } from './utils'\nimport { createDisposableWorker } from './createDisposableWorker'\n\nexport const run = (work = null, args) => {\n  const validWork = isValid(work)('function')\n  const validArgs = isValid(args)(['array', 'undefined'])\n  if (validWork && validArgs) {\n    const worker = createDisposableWorker(makeResponse(work))\n    return worker.post({ args })\n  }\n  if (!validWork) console.error(argumentError({ expected: 'a function', received: work }))\n  if (!validArgs) console.error(argumentError({ expected: 'an array', received: args }))\n  return null\n}\n", "import { argumentError, isValid } from './utils'\nimport { run } from './run'\n\nconst warnWork = msg => {\n  console.warn(`WARN! ${msg} is not a registered action for this worker`)\n  return `${msg} is not a registered action for this worker`\n}\n\nexport const post = actions => (msg = null, args) => {\n  const validMessage = isValid(msg)('string')\n  const validArgs = isValid(args)(['array', 'undefined'])\n  if (validMessage && validArgs) {\n    const work = actions\n      .filter(({ message }) => JSON.stringify(message) === JSON.stringify(msg))\n      .map(action => action.func)\n      .pop()\n\n    if (!work) return run(warnWork, [JSON.stringify(msg)])\n    if (args) return run(work, args)\n    return run(work)\n  }\n\n  if (!validMessage) console.error(argumentError({ expected: 'a string', received: msg }))\n  if (!validArgs) console.error(argumentError({ expected: 'an array', received: args }))\n  return null\n}\n", "import { isValid, argumentError } from './utils'\n\nconst makeOptionsFor = arr => {\n  return {\n    expected: 'an array of arrays, an array of objects, or an array of strings',\n    received: arr,\n    extraInfo: 'If an array of arrays, ' +\n      'it must have the same length as the actions registered for this worker.\\n' +\n      'If an array of objects, every object must containing two fields:\\n* message\\n* args'\n  }\n}\nexport function postAll (arr = []) {\n  if (isValid(arr)(['arraysArray', 'postParamsArray', 'stringsArray'])) {\n    if (arr.length === 0) return Promise.all(this.actions.map(({ message }) => this.postMessage(message)))\n\n    if (arr.every(item => typeof item === 'string')) {\n      return Promise.all(arr.map(msg => this.postMessage(msg)))\n    }\n\n    if (arr.every(item => typeof item === 'object' && !Array.isArray(item))) {\n      return Promise.all(arr.map(({ message, args }) => this.postMessage(message, args)))\n    }\n\n    if (arr.every(item => Array.isArray(item)) && arr.length === this.actions.length) {\n      return Promise.all(arr.map((args, index) => this.postMessage(this.actions[index].message, args)))\n    }\n  }\n\n  console.error(argumentError(makeOptionsFor(arr)))\n  return null\n}\n", "import { argumentError, isValid } from './utils'\n\nconst isActionOf = actions => newAction =>\n  actions.some(action => action.message === newAction.message)\n\nconst warnMsg = action =>\n  `WARN! An action with message \"${action.message}\" is already registered for this worker`\n\nconst pushInto = actions => action => {\n  if (isActionOf(actions)(action)) {\n    console.warn(warnMsg(action))\n    return actions.length\n  }\n  return actions.push(action)\n}\n\nconst makeOptionsFor = action => {\n  return {\n    expected: 'an array of actions or an action',\n    received: action,\n    extraInfo: 'Every action should be an object containing two fields:\\n* message\\n* func'\n  }\n}\n\nexport const register = actions => (action = null) => {\n  if (isValid(action)(['action', 'actionsArray'])) {\n    if (Array.isArray(action)) {\n      return action.reduce((actions, action) => {\n        pushInto(actions)(action)\n        return actions\n      }, actions).length\n    }\n\n    return pushInto(actions)(action)\n  }\n  console.error((argumentError(makeOptionsFor(action))))\n  return null\n}\n", "import { argumentError, isValid } from './utils'\n\nconst removeFrom = actions => msg => {\n  const index = actions.findIndex(({ message }) => message === msg)\n  index === -1\n    ? console.warn(`WARN! Impossible to unregister action with message \"${msg}\".\\nIt is not a registered action for this worker.`)\n    : actions.splice(index, 1)\n  return actions\n}\n\nconst makeOptions = msg => {\n  return {\n    expected: 'an array of strings or a string',\n    received: msg\n  }\n}\n\nexport const unregister = actions => (msg = null) => {\n  if (isValid(msg)(['string', 'stringsArray'])) {\n    if (Array.isArray(msg)) {\n      return msg.reduce((actions, message) => {\n        removeFrom(actions)(message)\n        return actions\n      }, actions).length\n    }\n    return removeFrom(actions)(msg).length\n  }\n\n  console.error(argumentError(makeOptions(msg)))\n  return null\n}\n", "import { argumentError, isValid } from './utils'\nimport { post } from './post'\nimport { postAll } from './postAll'\nimport { register } from './register'\nimport { unregister } from './unregister'\n\nconst options = actions => {\n  return {\n    expected: 'an array of objects',\n    received: actions,\n    extraInfo: 'Every action should be an object containing two fields:\\n* message\\n* func'\n  }\n}\n\nexport const create = (actions = []) => {\n  if (isValid(actions)('actionsArray')) {\n    return {\n      actions: actions,\n      postMessage: post(actions),\n      postAll: postAll,\n      register: register(actions),\n      unregister: unregister(actions)\n    }\n  }\n  console.error(argumentError(options(actions)))\n  return null\n}\n", "import { create } from './create'\nimport { run } from './run'\n\nconst createWrapper = () => {\n  if (!window.Worker) {\n    console.error('This browser does not support Workers.')\n    return null\n  }\n  if (!(window.URL.createObjectURL || window.webkitURL.createObjectURL)) {\n    console.error('This browser does not have URL.createObjectURL method.')\n    return null\n  }\n  return { create, run }\n}\n\nconst WorkerWrapper = createWrapper()\n\nexport default WorkerWrapper\n"],
  "mappings": "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",
  "names": []
}
