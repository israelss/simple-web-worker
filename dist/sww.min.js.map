{"version":3,"file":"sww.min.js","sources":["../src/postAll.js","../src/utils.js","../src/createDisposableWorker.js","../src/run.js","../src/post.js","../src/register.js","../src/unregister.js","../src/create.js","../src/index.js"],"sourcesContent":["// import { invalidObjectsArray, isArrayOf, notArray, returnNull, wrongLength, wrongObjects } from './utils'\nimport { isValid, argumentError } from './utils'\n\nconst makeOptionsFor = arr => {\n  return {\n    expected: 'an array of arrays, an array of objects, or an array of strings',\n    received: arr,\n    extraInfo: 'If an array of arrays, ' +\n      'it must have the same length as the actions registered for this worker.\\n' +\n      'If an array of objects, every object must containing two fields:\\n* message\\n* args'\n  }\n}\nexport function postAll (arr = []) {\n  if (isValid(arr)(['arraysArray', 'postParamsArray', 'stringsArray'])) {\n    if (arr.length === 0) return Promise.all(this.actions.map(({ message }) => this.postMessage(message)))\n\n    if (arr.every(item => typeof item === 'string')) {\n      return Promise.all(arr.map(msg => this.postMessage(msg)))\n    }\n\n    if (arr.every(item => typeof item === 'object' && !Array.isArray(item))) {\n      return Promise.all(arr.map(({ message, args }) => this.postMessage(message, args)))\n    }\n\n    if (arr.every(item => Array.isArray(item)) && arr.length === this.actions.length) {\n      return Promise.all(arr.map((args, index) => this.postMessage(this.actions[index].message, args)))\n    }\n  }\n\n  console.error(argumentError(makeOptionsFor(arr)))\n  return null\n}\n","// Argument validation\nconst isValidObjectWith = fields => obj =>\n  !!obj && !Array.isArray(obj) && fields.every(field => obj.hasOwnProperty(field))\n\nconst isValidAction = obj => {\n  return isValidObjectWith(['message', 'func'])(obj) &&\n    typeof obj.func === 'function' && typeof obj.message === 'string'\n}\n\nconst isValidActionsArray = arr => arr.every(isValidAction)\n\nconst isValidPostParams = obj => {\n  return isValidObjectWith(['message', 'args'])(obj) &&\n    Array.isArray(obj.args) && typeof obj.message === 'string'\n}\n\nconst isValidPostParamsArray = arr => arr.every(isValidPostParams)\n\nconst isValidObjectsArray = arr => (fields = []) =>\n  arr.every(isValidObjectWith(fields))\n\nconst testArray = {\n  'actionsArray': arr => isValidActionsArray(arr),\n  'arraysArray': arr => arr.every(item => Array.isArray(item)),\n  'objectsArray': arr => isValidObjectsArray(arr)(),\n  'postParamsArray': arr => isValidPostParamsArray(arr),\n  'stringsArray': arr => arr.every(item => typeof item === 'string')\n}\n\nconst isValidArg = arg => type => {\n  if (type === 'null') return arg === null\n  if (type === 'undefined') return arg === undefined\n  if (type === 'action') return isValidAction(arg)\n  if (Array.isArray(arg)) {\n    if (type !== 'array' && !testArray[type]) return false\n    if (type === 'array') return true\n    return testArray[type](arg)\n  }\n  if (arg) return typeof arg === type.toString() // eslint-disable-line\n  return false\n}\n\nconst isValid = argument => (types = null) => {\n  if (Array.isArray(types)) return types.some(type => isValidArg(argument)(type))\n  if (isValidArg(argument)(types)) return true\n  return false\n}\n\n// Argument error builder\nconst argumentError = ({ expected = '', received, extraInfo = '' }) => {\n  try {\n    return new TypeError(`${'You should provide ' + expected}${'\\n' + extraInfo}${'\\nReceived: ' + JSON.stringify(received)}`)\n  } catch (err) {\n    if (err.message.includes('Converting circular structure to JSON')) {\n      return new TypeError(`${'You should provide ' + expected}${'\\n' + extraInfo}${'\\nReceived a circular structure: ' + received.toString()}`)\n    }\n    throw err\n  }\n}\n\n// Response builder\nconst makeResponse = work => `\n  self.onmessage = function(event) {\n    const args = event.data.message.args\n    if (args) {\n      self.postMessage((${work}).apply(null, args))\n      return close()\n    }\n    self.postMessage((${work})())\n    return close()\n  }\n`\n\nexport {\n  makeResponse,\n  argumentError,\n  isValid\n}\n","export const createDisposableWorker = response => {\n  const URL = window.URL || window.webkitURL\n  console.log(response, 'response:::');\n  const blob = new Blob([response], { type: 'application/javascript' }) // eslint-disable-line\n  const objectURL = URL.createObjectURL(blob)\n  const worker = new Worker(objectURL) // eslint-disable-line\n  worker.post = message =>\n    new Promise((resolve, reject) => {\n      worker.onmessage = event => {\n        URL.revokeObjectURL(objectURL)\n        resolve(event.data)\n      }\n      worker.onerror = e => {\n        console.error(`Error: Line ${e.lineno} in ${e.filename}: ${e.message}`)\n        reject(e)\n      }\n      worker.postMessage({ message })\n    })\n  return worker\n}\n","import { argumentError, isValid, makeResponse } from './utils'\nimport { createDisposableWorker } from './createDisposableWorker'\n\nexport const run = (work = null, args) => {\n  const validWork = isValid(work)('function')\n  const validArgs = isValid(args)(['array', 'undefined'])\n  if (validWork && validArgs) {\n    const worker = createDisposableWorker(makeResponse(work))\n    return worker.post({ args })\n  }\n  if (!validWork) console.error(argumentError({ expected: 'a function', received: work }))\n  if (!validArgs) console.error(argumentError({ expected: 'an array', received: args }))\n  return null\n}\n","import { argumentError, isValid } from './utils'\nimport { run } from './run'\n\nconst warnWork = msg => {\n  console.warn(`WARN! ${msg} is not a registered action for this worker`)\n  return `${msg} is not a registered action for this worker`\n}\n\nexport const post = actions => (msg = null, args) => {\n  const validMessage = isValid(msg)('string')\n  const validArgs = isValid(args)(['array', 'undefined'])\n  if (validMessage && validArgs) {\n    const work = actions\n      .filter(({ message }) => JSON.stringify(message) === JSON.stringify(msg))\n      .map(action => action.func)\n      .pop()\n    if (!work) return run(warnWork, [JSON.stringify(msg)])\n    if (args) return run(work, args)\n    return run(work)\n  }\n\n  if (!validMessage) console.error(argumentError({ expected: 'a string', received: msg }))\n  if (!validArgs) console.error(argumentError({ expected: 'an array', received: args }))\n  return null\n}\n","import { argumentError, isValid } from './utils'\n\nconst isActionOf = actions => newAction =>\n  actions.some(action => action.message === newAction.message)\n\nconst warnMsg = action =>\n  `WARN! An action with message \"${action.message}\" is already registered for this worker`\n\nconst pushInto = actions => action => {\n  if (isActionOf(actions)(action)) {\n    console.warn(warnMsg(action))\n    return actions.length\n  }\n  return actions.push(action)\n}\n\nconst makeOptionsFor = action => {\n  return {\n    expected: 'an array of actions or an action',\n    received: action,\n    extraInfo: 'Every action should be an object containing two fields:\\n* message\\n* func'\n  }\n}\n\nexport const register = actions => (action = null) => {\n  if (isValid(action)(['action', 'actionsArray'])) {\n    if (Array.isArray(action)) {\n      return action.reduce((actions, action) => {\n        pushInto(actions)(action)\n        return actions\n      }, actions).length\n    }\n\n    return pushInto(actions)(action)\n  }\n  console.error((argumentError(makeOptionsFor(action))))\n  return null\n}\n","import { argumentError, isValid } from './utils'\n\nconst removeFrom = actions => msg => {\n  const index = actions.findIndex(({ message }) => message === msg)\n  index === -1\n    ? console.warn(`WARN! Impossible to unregister action with message \"${msg}\".\\nIt is not a registered action for this worker.`)\n    : actions.splice(index, 1)\n  return actions\n}\n\nconst makeOptions = msg => {\n  return {\n    expected: 'an array of strings or a string',\n    received: msg\n  }\n}\n\nexport const unregister = actions => (msg = null) => {\n  if (isValid(msg)(['string', 'stringsArray'])) {\n    if (Array.isArray(msg)) {\n      return msg.reduce((actions, message) => {\n        removeFrom(actions)(message)\n        return actions\n      }, actions).length\n    }\n    return removeFrom(actions)(msg).length\n  }\n\n  console.error(argumentError(makeOptions(msg)))\n  return null\n}\n","import { argumentError, isValid } from './utils'\nimport { post } from './post'\nimport { postAll } from './postAll'\nimport { register } from './register'\nimport { unregister } from './unregister'\n\nconst options = actions => {\n  return {\n    expected: 'an array of objects',\n    received: actions,\n    extraInfo: 'Every action should be an object containing two fields:\\n* message\\n* func'\n  }\n}\n\nexport const create = (actions = []) => {\n  if (isValid(actions)('actionsArray')) {\n    return {\n      actions: actions,\n      postMessage: post(actions),\n      postAll: postAll,\n      register: register(actions),\n      unregister: unregister(actions)\n    }\n  }\n  console.error(argumentError(options(actions)))\n  return null\n}\n","import { create } from './create'\nimport { run } from './run'\n\nconst createWrapper = () => {\n  if (!window.Worker) {\n    console.error('This browser does not support Workers.')\n    return null\n  }\n  if (!(window.URL.createObjectURL || window.webkitURL.createObjectURL)) {\n    console.error('This browser does not have URL.createObjectURL method.')\n    return null\n  }\n  return { create, run }\n}\n\nconst WorkerWrapper = createWrapper()\n\nexport default WorkerWrapper\n"],"names":["postAll","arr","isValid","length","Promise","all","this","actions","map","message","_this","postMessage","every","item","msg","Array","isArray","args","index","error","argumentError","makeOptionsFor","isValidObjectWith","obj","fields","hasOwnProperty","field","isValidAction","func","isValidActionsArray","isValidPostParams","isValidPostParamsArray","isValidObjectsArray","testArray","isValidArg","type","arg","undefined","toString","types","some","argument","expected","received","extraInfo","TypeError","JSON","stringify","err","includes","makeResponse","work","createDisposableWorker","URL","window","webkitURL","log","response","blob","Blob","objectURL","createObjectURL","worker","Worker","post","resolve","reject","onmessage","revokeObjectURL","event","data","onerror","e","lineno","filename","run","validWork","validArgs","console","warnWork","warn","validMessage","filter","action","pop","isActionOf","newAction","warnMsg","pushInto","push","register","reduce","removeFrom","findIndex","splice","makeOptions","unregister","options","create","createWrapper","WorkerWrapper"],"mappings":"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"}